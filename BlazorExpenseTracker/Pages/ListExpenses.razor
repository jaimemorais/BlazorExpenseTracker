@page "/listExpenses"
@attribute [Authorize]

@using BlazorExpenseTracker.Model;
@using BlazorExpenseTracker.Services.Data;
@inject IExpenseDataService _expensesDataService
@inject AuthenticationStateProvider _authenticationStateProvider

<PageTitle>BlazorExpenseTracker - Expenses</PageTitle>

<h1>Expenses List</h1>



@if (expenses == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Value</th>
                <th>Category</th>
                <th>Payment Type</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var expense in expenses)
            {
                <tr>
                    <td>@expense.Date.ToShortDateString()</td>
                    <td>@expense.Value</td>
                    <td>@expense.Category</td>
                    <td>@expense.PaymentType</td>
                    <td>@expense.Description</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IList<Expense>? expenses;

    protected override async Task OnInitializedAsync()
    {
        var authState = await _authenticationStateProvider.GetAuthenticationStateAsync();
        
        expenses = await _expensesDataService.GetExpensesAsync(authState.User?.Identity?.Name, DateOnly.FromDateTime(DateTime.Now.AddDays(-5)));        
    }
}
